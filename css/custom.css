/* Custom CSS */
* {
  box-sizing: border-box; }

html,
body {
  height: 100%;
  min-height: 100vh; }

body {
  background-color: #DDDDDD;
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 16px;
  color: #3c3c3c;
  overflow: auto;
  padding-bottom: 160px; }

.w-100 {
  width: 100%; }

.text-left {
  text-align: left; }

.text-center {
  text-align: center; }

.vertical-align-center {
  display: table-cell;
  vertical-align: middle; }

.bg-main {
  background-color: #FFFFFF;
  width: 100%;
  max-width: 500px; }

.image-holder {
  height: 100%;
  background: url(../img/Laptop_Desk_Image.jpg) no-repeat;
  background-size: 100% 100%;
  background-attachment: fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  -webkit-box-shadow: 0 10px 5px 2px #999999;
  box-shadow: 0 10px 5px 2px #999999; }

.user-input {
  /*Adds margin to top of first element, as fixed header would overlay it otherwise*/
  margin-top: 50px; }

.todos {
  margin-top: 15px; }

nav.navbar.navbar-default.navbar-fixed-top, .fixed-nav {
  background-color: #FFFFFF;
  /* Adjusted shadows as horizontal shadow created a pseudo-border on nav element */
  -webkit-box-shadow: 0 1px 0px 0px #999999;
  box-shadow: 0 1px 0px 0px #999999; }

main {
  display: inline-block;
  height: 100%;
  max-width: 500px;
  padding: 15px; }

header {
  margin: 0 0 20px 0;
  /* add a margin on 20px to the bottom
  - remember - top right bottom left */
  padding: 30px;
  /* padding of 30px all around */ }

header h1 {
  color: #9a9292;
  /* change colour of text */
  font-size: 500%;
  /* increase font size to 500% of default  */
  text-align: center;
  font-family: 'Gafata', sans-serif; }

h1 {
  white-space: normal !important;
  word-wrap: break-word; }

footer {
  height: 160px;
  width: 100%;
  background-color: #f0f0f0; }

.footer-content {
  display: table;
  height: 100%;
  width: 100%;
  text-align: center; }

.container .fixed-nav {
  border: none; }

/* START NAVBAR CSS*/
.navbar.navbar-default.navbar-fixed-top {
  max-height: 60px;
  text-align: center;
  background-color: #FFFFFF; }

/* The next two classes ensure that brand images in the nav bar are contained within the navbar itself */
.navbar-logo {
  float: none;
  display: inline-block;
  max-height: 50px;
  margin: 0;
  padding: 5px; }

/* END NAVBAR CSS*/
/*Needed to make this declaration more specific than just 'input'*/
input.form-control {
  height: 50px; }

/* START LISTS CSS */
li {
  margin-top: 5px;
  margin-bottom: 5px; }

span {
  margin-right: 20px; }

li > h4 {
  margin-left: 35px; }

/*Next two declarations are used because I couldn't get the HTML span approach to work. Found approach on
https://stackoverflow.com/questions/28587943/align-text-beside-fontawesome-icon */
li.custom-icon:before {
  font-family: fontAwesome;
  font-size: 1.75em;
  content: '\f096';
  position: absolute;
  /*16 pixels to left to stay in line with other Bootstrap elements*/
  left: 16px;
  /* Places the square dot at the space created by the LI padding */
  top: 11px; }

li.custom-icon.checked:before {
  content: '\f046';
  position: absolute;
  /*16 pixels to left to stay in line with other Bootstrap elements*/
  left: 16px;
  /* Places the square dot at the space created by the LI padding */
  top: 11px; }

li.checked div label {
  /* Applies a strike through effect to the label elements of those list items that have been clicked on and marked as checked by the user.
  I had been using jQuery to query the DOM and apply the class "checked" to the child label elements, but using CSS was much more efficient
  */
  text-decoration: line-through; }

/* END LISTS CSS */
.btn {
  margin-top: 10px;
  margin-bottom: 5px; }

#clearChecked {
  /*This button hidden by default*/
  display: none; }

/*I created this class, as the default jQuery fadeOut etc wasn't working. This custom class is applied to the checked list items Once
the 'Clear Checked' button is pressed by the user*/
.fadeOut {
  animation-name: animate;
  animation-duration: 1s;
  /*Once animation plays, it stops on the last frame, i.e. div has disappeared*/
  animation-fill-mode: forwards;
  /*Create effect where animation picks up speed as it runs*/
  animation-timing-function: ease-out; }

@keyframes animate {
  to {
    opacity: 0; } }
/*# sourceMappingURL=custom.css.map */

/*# sourceMappingURL=custom.css.map */
